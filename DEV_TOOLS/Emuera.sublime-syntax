%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
name: Emuera
file_extensions:
  - erb
scope: source.erb

variables:
  control_keywords_0: 'ABS|ADD(|COPY|DEF|VOID)CHARA|ALIGNMENT|ASSERT|BARSTR|BEGIN|CALL(|EVENT|F|FORM(|F)|TRAIN)'
  control_keywords_1: 'CASE(|ELSE)|CATCH|CHARATU|CHKFONT|CLEAR(BIT|LINE)|COPYCHARA|CURRENT(ALIGN|REDRAW)'
  control_keywords_2: 'CUSTOMDRAWLINE|DEBUG(CLEAR|PRINT(|L|FORM(|L)))|DEL(|ALL)CHARA|DO(|TRAIN)|DRAWLINEFORM'
  control_keywords_3: 'ENCODETOUNI|END(CATCH|FUNC|NOSKIP|SELECT)|ESCAPE|EXISTCSV|FIND(CHARA|LASTCHARA)'
  control_keywords_4: 'FONT(BOLD|ITALIC|REGULAR|STYLE)|FOR(|CEKANA|CEWAIT)|GOTOFORM|INPUT(|MOUSEKEY|S)'
  control_keywords_5: 'GET((|BG|DEFBG|DEF|FOCUS)COLOR|BIT|CHARA|FONT|STYLE)|INRANGE|INVERTBIT|ISNUMERIC|ISSKIP'
  control_keywords_6: 'JUMPFORM|LIMIT|LINEISEMPTY|LOOP|MAX|MIN|MONEYSTR|MOUSESKIP|NEXT|NOSKIP|ONEINPUT(|S)'
  control_keywords_7: 'PICKUPCHARA|POWER|PRINT(|FORM)(C|LC)(|K|D)|PRINTBUTTON(|C|LC)|PRINTCPERLINE'
  control_keywords_8: 'PRINTDATA(|K|D)(|L|W)|PRINTPLAIN(|FORM)|PRINTSINGLE(|V|S|FORM|FORMS)(|K|D)|PRINT(_IMG|_SPACE)'
  control_keywords_9: 'REDRAW|REPLACE|RESET(BGCOLOR|COLOR)|RETURN(|F|FORM)|REUSELASTLINE|SELECTCASE|SIGN'
  control_keywords_a: 'SET(BGCOLORBYNAME|BIT|COLORBYNAME|FONT)|SKIPDISP|SORTCHARA|SPLIT|SQRT|SUBSTRING(|U)'
  control_keywords_b: 'STR(COUNT|FIND(|U)|LEN(|FORM(|U)|S(|U)|U))|SWAPCHARA|THROW|TINPUT(|S)|TWAIT|UNICODE'
  control_keywords_c: 'TO(FULL|HALF|INT|LOWER|NEINPUT(|S)|STR|UPPER)|WAITANYKEY|WEND|WHILE|PUTFORM'
  control_keywords_d: 'TRY((|C)(CALL(|FORM|LIST)|GOTO(|FORM)|JUMP(|FORM))|GOTO(|FORM|LIST)|JUMP(|FORM|LIST))'
  control_keywords_e: 'PRINT(|V|S|FORM|FORMS)(|K|D)(|L|W)|(|ELSE|END|S)IF|IS|CONTINUE|ELSE|RESTART|BREAK|WAIT|GOTO'

  func_keywords_part_0: 'ARRAY(COPY|(|M)SORT|REMOVE|SHIFT)|AWAIT|CHK(|CHARA)DATA|CLEARTEXTBOX|CUPCHECK|CVARSET'
  func_keywords_part_1: 'CBG(CLEAR(|BUTTON)|REMOVE(BMAP|RANGE)|SET(BMAPG|G|SPRITE))|DELDATA|DUMPRAND|GGETCOLOR'
  func_keywords_part_2: 'CSV(ABL|BASE|(|CALL|MASTER|NICK)NAME|CFLAG|CSTR|EQUIP|EXP|JULE|MARK|RELATION|TALENT)'
  func_keywords_part_3: 'FIND((|LAST)ELEMENT|_CHARADATA)|GC(LEAR|REATE(|D|FROMFILE))|GD(ISPOSE|RAWGWITHMASK)'
  func_keywords_part_4: 'GET((EXP|PALAM)LV|KEY(|TRIGGERED)|(|MILLI)SECOND|NUM|TIME)|GFILLRECTANGLE|G(HEIGHT|WIDTH)'
  func_keywords_part_5: 'G(LOAD|SAVE)|GSET(BRUSH|COLOR|FONT|PEN)|HTML_(PRINT|TAGSPLIT)|INITRAND|ISACTIVE'
  func_keywords_part_6: 'LOAD(CHARA|DATA|GLOBAL|TEXT)|MOUSE(X|Y)|OUTPUTLOG|RANDOMIZE|RESET(DATA|GLOBAL|_STAIN)'
  func_keywords_part_7: 'SAVE(CHARA|DATA|GLOBAL|NOS|TEXT)|SETANIMETIMER|STOPCALLTRAIN|STRDATA|SWAP|VAR(SET|SIZE)'
  func_keywords_part_8: 'SPRITE(ANIME(ADDFRAME|CREATE)|CREATED|DISPOSE|GETCOLOR|HEIGHT|WIDTH|MOVE|SETPOS|POS(X|Y))'
  func_keywords_part_9: 'TOOLTIP_SET(COLOR|DELAY|DURATION)'

  uservars_keywords: '#DIM(|S)|#FUNCTION(|S)|#PRI|LOCAL(|S)'

  vars_keywords_0: 'ABL(|NAME)|ARG(|S)|ASSI(|PLAY)|BASE(|NAME)|BOUGHT|CALLNAME|CDFLAG(|NAME1|NAME2)'
  vars_keywords_1: 'CDOWN|CFLAG(|NAME)|CHARANUM|COUNT|CSTR(|NAME)|CUP|D(A|AY|B|C|D|E)|DITEMTYPE'
  vars_keywords_2: 'DOWN(|BASE)|DRAWLINESTR|EJAC|EQUIP(|NAME)|EX(|NAME|P|PLV|PNAME)|FLAG(|NAME)'
  vars_keywords_3: 'GAMEBASE_(ALLOWVERSION|AUTHOR|DEFAULTCHARA|GAMECODE|INFO|NOITEM|TITLE|VERSION|YEAR)'
  vars_keywords_4: 'GLOBAL(|NAME|S|SNAME)|GOTJUEL|ISASSI|ISTIMEOUT|ITEM(|NAME|PRICE|SALES)|JUEL'
  vars_keywords_5: 'LASTLOAD_(NO|TEXT|VERSION)|LINECOUNT|LOCAL(|S)|(MAX|LOSE)BASE|MARK(|NAME)'
  vars_keywords_6: 'MASTER(|NAME)|MONEY(|LABEL)|(|NICK)NAME|NEXTCOM|NO(|ITEM)|NOWEX|PALAM(|LV|NAME)'
  vars_keywords_7: 'PBAND|PLAYER|PREVCOM|RAND(|DATA)|RELATION|RESULT(|S)|SAVE(DATA_TEXT|STR|STRNAME)'
  vars_keywords_8: 'SELECTCOM|SOURCE(|NAME)|STAIN(|NAME)|STR(|NAME)|STRNAME|TA|TALENT(|NAME)|TARGET'
  vars_keywords_9: 'TB|TCVAR(|NAME)|TEQUIP(|NAME)|TFLAG(|NAME)|TIME|TRAINNAME|TSTR(|NAME)|UP'
  vars_keywords_a: 'WINDOW_TITLE|__INT_(MAX|MIN)__'

contexts:
  prototype:
    - include: comments

  main:
    - include: keywords
    - include: functions
    - include: numbers
    - include: strings
    - include: label

  keywords:
    - match: \b({{control_keywords_0}})\b
      scope: keyword.control.flow.erb
    - match: \b({{control_keywords_1}})\b
      scope: keyword.control.flow.erb
    - match: \b({{control_keywords_2}})\b
      scope: keyword.control.flow.erb
    - match: \b({{control_keywords_3}})\b
      scope: keyword.control.flow.erb
    - match: \b({{control_keywords_4}})\b
      scope: keyword.control.flow.erb
    - match: \b({{control_keywords_5}})\b
      scope: keyword.control.flow.erb
    - match: \b({{control_keywords_6}})\b
      scope: keyword.control.flow.erb
    - match: \b({{control_keywords_7}})\b
      scope: keyword.control.flow.erb
    - match: \b({{control_keywords_8}})\b
      scope: keyword.control.flow.erb
    - match: \b({{control_keywords_9}})\b
      scope: keyword.control.flow.erb
    - match: \b({{control_keywords_a}})\b
      scope: keyword.control.flow.erb
    - match: \b({{control_keywords_b}})\b
      scope: keyword.control.flow.erb
    - match: \b({{control_keywords_c}})\b
      scope: keyword.control.flow.erb
    - match: \b({{control_keywords_d}})\b
      scope: keyword.control.flow.erb
    - match: \b({{control_keywords_e}})\b
      scope: keyword.control.flow.erb

    - match: \b({{func_keywords_part_0}})\b
      scope: keyword.other.exec.erb
    - match: \b({{func_keywords_part_1}})\b
      scope: keyword.other.exec.erb
    - match: \b({{func_keywords_part_2}})\b
      scope: keyword.other.exec.erb
    - match: \b({{func_keywords_part_3}})\b
      scope: keyword.other.exec.erb
    - match: \b({{func_keywords_part_4}})\b
      scope: keyword.other.exec.erb
    - match: \b({{func_keywords_part_5}})\b
      scope: keyword.other.exec.erb
    - match: \b({{func_keywords_part_6}})\b
      scope: keyword.other.exec.erb
    - match: \b({{func_keywords_part_7}})\b
      scope: keyword.other.exec.erb
    - match: \b({{func_keywords_part_8}})\b
      scope: keyword.other.exec.erb
    - match: \b({{func_keywords_part_9}})\b
      scope: keyword.other.exec.erb

    - match: ({{uservars_keywords}})\b
      scope: variable.function.erb

  functions:
    - match: '@\b\w+\b'
      scope: entity.name.function.erb

    - match: '(?<=CALL )\w+((?=,)|$)'
      scope: entity.name.function.erb

    - match: '\w+(?=\()'
      scope: entity.name.function.erb

  numbers:
    - match: '\b(-)?[0-9.]+\b'
      scope: constant.numeric.erb

    - match: '\b(ARG|ARGS)\b'
      scope: constant.numeric.erb

    - match: '\b({{vars_keywords_0}})\b'
      scope: variable.function.erb
    - match: '\b({{vars_keywords_1}})\b'
      scope: variable.function.erb
    - match: '\b({{vars_keywords_2}})\b'
      scope: variable.function.erb
    - match: '\b({{vars_keywords_3}})\b'
      scope: variable.function.erb
    - match: '\b({{vars_keywords_4}})\b'
      scope: variable.function.erb
    - match: '\b({{vars_keywords_5}})\b'
      scope: variable.function.erb
    - match: '\b({{vars_keywords_6}})\b'
      scope: variable.function.erb
    - match: '\b({{vars_keywords_7}})\b'
      scope: variable.function.erb
    - match: '\b({{vars_keywords_8}})\b'
      scope: variable.function.erb
    - match: '\b({{vars_keywords_9}})\b'
      scope: variable.function.erb
    - match: '\b({{vars_keywords_a}})\b'
      scope: variable.function.erb

  strings:
    - match: '"'
      scope: string.erb
      push: inside_string

  inside_string:
    - meta_include_prototype: false
    - meta_scope: string.erb
    - match: '\.'
      scope: string.erb
    - match: '"'
      scope: string.erb
      pop: true

  label:
    - match: ^\$.+\b
      scope: variable.function.erb

  comments:
    - match: ';.+$'
      scope: comment.erb
